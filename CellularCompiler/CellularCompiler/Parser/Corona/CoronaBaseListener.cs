//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar/Corona.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICoronaListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class CoronaBaseListener : ICoronaListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMain([NotNull] CoronaParser.MainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.main"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMain([NotNull] CoronaParser.MainContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.grid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrid([NotNull] CoronaParser.GridContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.grid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrid([NotNull] CoronaParser.GridContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.states"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStates([NotNull] CoronaParser.StatesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.states"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStates([NotNull] CoronaParser.StatesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.initial"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitial([NotNull] CoronaParser.InitialContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.initial"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitial([NotNull] CoronaParser.InitialContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.rules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRules([NotNull] CoronaParser.RulesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.rules"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRules([NotNull] CoronaParser.RulesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] CoronaParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] CoronaParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.memberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberDeclaration([NotNull] CoronaParser.MemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.memberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberDeclaration([NotNull] CoronaParser.MemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatements([NotNull] CoronaParser.StatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatements([NotNull] CoronaParser.StatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CoronaParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CoronaParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectionStatement([NotNull] CoronaParser.SelectionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectionStatement([NotNull] CoronaParser.SelectionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterationStatement([NotNull] CoronaParser.IterationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterationStatement([NotNull] CoronaParser.IterationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] CoronaParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] CoronaParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.ruleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleStatement([NotNull] CoronaParser.RuleStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.ruleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleStatement([NotNull] CoronaParser.RuleStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompoundStatement([NotNull] CoronaParser.CompoundStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompoundStatement([NotNull] CoronaParser.CompoundStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] CoronaParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] CoronaParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.blockItemList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockItemList([NotNull] CoronaParser.BlockItemListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.blockItemList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockItemList([NotNull] CoronaParser.BlockItemListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.blockItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockItem([NotNull] CoronaParser.BlockItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.blockItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockItem([NotNull] CoronaParser.BlockItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="CoronaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringExpr([NotNull] CoronaParser.StringExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringExpr</c>
	/// labeled alternative in <see cref="CoronaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringExpr([NotNull] CoronaParser.StringExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="CoronaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExpr([NotNull] CoronaParser.NumberExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="CoronaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExpr([NotNull] CoronaParser.NumberExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InfixExpr</c>
	/// labeled alternative in <see cref="CoronaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixExpr([NotNull] CoronaParser.InfixExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InfixExpr</c>
	/// labeled alternative in <see cref="CoronaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixExpr([NotNull] CoronaParser.InfixExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoronaParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] CoronaParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoronaParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] CoronaParser.OperatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
